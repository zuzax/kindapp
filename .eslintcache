[{"C:\\Users\\Zuza\\Desktop\\KURS CODERSLAB\\projekt\\kindapp\\src\\index.js":"1","C:\\Users\\Zuza\\Desktop\\KURS CODERSLAB\\projekt\\kindapp\\src\\AddTaskForm.js":"2","C:\\Users\\Zuza\\Desktop\\KURS CODERSLAB\\projekt\\kindapp\\src\\DailyProgressBar.js":"3","C:\\Users\\Zuza\\Desktop\\KURS CODERSLAB\\projekt\\kindapp\\src\\App.js":"4","C:\\Users\\Zuza\\Desktop\\KURS CODERSLAB\\projekt\\kindapp\\src\\pages\\RegisterPage\\index.js":"5","C:\\Users\\Zuza\\Desktop\\KURS CODERSLAB\\projekt\\kindapp\\src\\pages\\LoginPage\\index.js":"6","C:\\Users\\Zuza\\Desktop\\KURS CODERSLAB\\projekt\\kindapp\\src\\pages\\HomePage\\index.js":"7","C:\\Users\\Zuza\\Desktop\\KURS CODERSLAB\\projekt\\kindapp\\src\\contextApi\\context.js":"8","C:\\Users\\Zuza\\Desktop\\KURS CODERSLAB\\projekt\\kindapp\\src\\contextApi\\ContextProvider.js":"9","C:\\Users\\Zuza\\Desktop\\KURS CODERSLAB\\projekt\\kindapp\\src\\components\\routes\\PublicRoute\\index.js":"10","C:\\Users\\Zuza\\Desktop\\KURS CODERSLAB\\projekt\\kindapp\\src\\pages\\NotFoundPage\\index.js":"11","C:\\Users\\Zuza\\Desktop\\KURS CODERSLAB\\projekt\\kindapp\\src\\components\\routes\\ProtectedRoute\\index.js":"12","C:\\Users\\Zuza\\Desktop\\KURS CODERSLAB\\projekt\\kindapp\\src\\components\\routes\\PrivateRoute\\index.js":"13","C:\\Users\\Zuza\\Desktop\\KURS CODERSLAB\\projekt\\kindapp\\src\\pages\\UserTasksPage\\index.js":"14","C:\\Users\\Zuza\\Desktop\\KURS CODERSLAB\\projekt\\kindapp\\src\\components\\Navbar\\index.js":"15","C:\\Users\\Zuza\\Desktop\\KURS CODERSLAB\\projekt\\kindapp\\src\\pages\\UserAddTasksPage\\index.js":"16","C:\\Users\\Zuza\\Desktop\\KURS CODERSLAB\\projekt\\kindapp\\src\\components\\TasksList\\index.js":"17","C:\\Users\\Zuza\\Desktop\\KURS CODERSLAB\\projekt\\kindapp\\src\\components\\TasksListItem\\index.js":"18","C:\\Users\\Zuza\\Desktop\\KURS CODERSLAB\\projekt\\kindapp\\src\\components\\routes\\TasksListItemBtnDelete\\index.js":"19","C:\\Users\\Zuza\\Desktop\\KURS CODERSLAB\\projekt\\kindapp\\src\\components\\Alert\\index.js":"20","C:\\Users\\Zuza\\Desktop\\KURS CODERSLAB\\projekt\\kindapp\\src\\components\\routes\\TasksListItemCheckbox\\index.js":"21","C:\\Users\\Zuza\\Desktop\\KURS CODERSLAB\\projekt\\kindapp\\src\\pages\\UserTasksPage\\Quote.js":"22"},{"size":690,"mtime":1609275580916,"results":"23","hashOfConfig":"24"},{"size":974,"mtime":1610147953955,"results":"25","hashOfConfig":"24"},{"size":1558,"mtime":1610204935063,"results":"26","hashOfConfig":"24"},{"size":1985,"mtime":1610203721180,"results":"27","hashOfConfig":"24"},{"size":2676,"mtime":1610200087133,"results":"28","hashOfConfig":"24"},{"size":1994,"mtime":1610191903420,"results":"29","hashOfConfig":"24"},{"size":162,"mtime":1610191488620,"results":"30","hashOfConfig":"24"},{"size":98,"mtime":1608665227661,"results":"31","hashOfConfig":"24"},{"size":404,"mtime":1609258141778,"results":"32","hashOfConfig":"24"},{"size":196,"mtime":1609259109337,"results":"33","hashOfConfig":"24"},{"size":185,"mtime":1609259620783,"results":"34","hashOfConfig":"24"},{"size":631,"mtime":1609344278560,"results":"35","hashOfConfig":"24"},{"size":508,"mtime":1609285454861,"results":"36","hashOfConfig":"24"},{"size":8994,"mtime":1610204394711,"results":"37","hashOfConfig":"24"},{"size":1298,"mtime":1610039603972,"results":"38","hashOfConfig":"24"},{"size":2932,"mtime":1610204139286,"results":"39","hashOfConfig":"24"},{"size":1336,"mtime":1610147623838,"results":"40","hashOfConfig":"24"},{"size":488,"mtime":1609342666311,"results":"41","hashOfConfig":"24"},{"size":345,"mtime":1610136452587,"results":"42","hashOfConfig":"24"},{"size":188,"mtime":1609542711130,"results":"43","hashOfConfig":"24"},{"size":506,"mtime":1610203181710,"results":"44","hashOfConfig":"24"},{"size":333,"mtime":1610190039867,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"th9vks",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},"C:\\Users\\Zuza\\Desktop\\KURS CODERSLAB\\projekt\\kindapp\\src\\index.js",[],["100","101"],"C:\\Users\\Zuza\\Desktop\\KURS CODERSLAB\\projekt\\kindapp\\src\\AddTaskForm.js",[],"C:\\Users\\Zuza\\Desktop\\KURS CODERSLAB\\projekt\\kindapp\\src\\DailyProgressBar.js",[],"C:\\Users\\Zuza\\Desktop\\KURS CODERSLAB\\projekt\\kindapp\\src\\App.js",["102","103","104","105"],"C:\\Users\\Zuza\\Desktop\\KURS CODERSLAB\\projekt\\kindapp\\src\\pages\\RegisterPage\\index.js",["106","107"],"C:\\Users\\Zuza\\Desktop\\KURS CODERSLAB\\projekt\\kindapp\\src\\pages\\LoginPage\\index.js",["108"],"C:\\Users\\Zuza\\Desktop\\KURS CODERSLAB\\projekt\\kindapp\\src\\pages\\HomePage\\index.js",[],"C:\\Users\\Zuza\\Desktop\\KURS CODERSLAB\\projekt\\kindapp\\src\\contextApi\\context.js",[],["109","110"],"C:\\Users\\Zuza\\Desktop\\KURS CODERSLAB\\projekt\\kindapp\\src\\contextApi\\ContextProvider.js",[],["111","112"],"C:\\Users\\Zuza\\Desktop\\KURS CODERSLAB\\projekt\\kindapp\\src\\components\\routes\\PublicRoute\\index.js",[],["113","114"],"C:\\Users\\Zuza\\Desktop\\KURS CODERSLAB\\projekt\\kindapp\\src\\pages\\NotFoundPage\\index.js",[],["115","116"],"C:\\Users\\Zuza\\Desktop\\KURS CODERSLAB\\projekt\\kindapp\\src\\components\\routes\\ProtectedRoute\\index.js",[],["117","118"],"C:\\Users\\Zuza\\Desktop\\KURS CODERSLAB\\projekt\\kindapp\\src\\components\\routes\\PrivateRoute\\index.js",[],["119","120"],"C:\\Users\\Zuza\\Desktop\\KURS CODERSLAB\\projekt\\kindapp\\src\\pages\\UserTasksPage\\index.js",["121","122","123"],"import React, {useEffect, useState}  from \"react\";\r\nimport firebase from 'firebase'\r\nimport Calendar from 'react-calendar';\r\nimport TasksList from \"../../components/TasksList\";\r\nimport DailyProgressBar from \"../../DailyProgressBar\";\r\nimport Quote from './Quote'\r\n\r\nconst UserTasksPage = (props) => {\r\n    const firestore = firebase.firestore()\r\n    const [tasks, setTasks] = useState([])\r\n    const [selectedDate, setSelectedDate] = useState(new Date())\r\n    // const [percent, setPercent] = useState(0)\r\n    const [url, setUrl] = useState(\"\")\r\n\r\n    // zmiana state dla chechkboxa\r\n    const handleCheckboxChangeTask = (index) =>{\r\n        const updatedTasks = tasks.map((task, i)=>{\r\n            if(i === index)\r\n                return {...task, isChecked: !task.isChecked}\r\n            return task\r\n        })\r\n        setTasks([...updatedTasks])\r\n\r\n            // zapis do firestore zadan odznaczonych na dany dzien\r\n        firestore\r\n            .collection(\"completedTasks\")\r\n            .where(\"date\", \"==\", selectedDate.toLocaleDateString())\r\n            .where(\"uid\", \"==\", firebase.auth().currentUser.uid)\r\n            .get()\r\n            .then(d =>{\r\n                // jeśli istnieje dokument w kolekcji \"completedTasks\" dla danego dnia i użytkownika\r\n                // to pobieramy ten dokument i go aktualizujemy\r\n                if(d.docs.length > 0)\r\n                {\r\n                    const doc = d.docs[0];\r\n                    const tasksCheck  = updatedTasks.map(t => t.isChecked)\r\n                    firestore\r\n                        .collection(\"completedTasks\")\r\n                        .doc(doc.id)\r\n                        .update({\r\n                            tasks: tasksCheck\r\n                        })\r\n                }\r\n                // jeśli nie istnieje dokument w kolekcji \"completedTasks\" dla danego dnia i użytkownika\r\n                // tworzy sie nowy dokument\r\n                else\r\n                {\r\n                    const tasksCheck  = updatedTasks.map(t => t.isChecked)\r\n                    firestore\r\n                        .collection(\"completedTasks\")\r\n                        .add({\r\n                            uid: firebase.auth().currentUser.uid,\r\n                            date: selectedDate.toLocaleDateString(),\r\n                            tasks: tasksCheck\r\n                        })\r\n                }\r\n            })\r\n\r\n            // calculateDidTasksPercentPerMonth()\r\n            // .then(p => {\r\n            //     setPercent(p)\r\n            // })\r\n    }\r\n    // generowanie randomowego cytatu\r\n    const randomQuote =  Math.floor(Math.random() * (1643 - 1)) + 1;\r\n    useEffect(() => {\r\n        fetch(\"https://type.fit/api/quotes\")\r\n        .then(resp => resp.json())\r\n        .then(q => {\r\n            setUrl(q[randomQuote].text);\r\n        })\r\n        .catch(err => {\r\n            console.error(err);\r\n        });\r\n    }, [])\r\n    //\r\n\r\n    useEffect(()=>{\r\n        firestore\r\n            .collection(\"tasks\")\r\n            .where(\"uid\", \"==\", firebase.auth().currentUser.uid)\r\n            .get()\r\n            .then(d =>{\r\n                const doc = d.docs.map(o => o.data())[0]\r\n                console.log(doc)\r\n                if(doc)\r\n                {\r\n                    const tasksObjs = prepareTasks(doc)\r\n                    setTasks([...tasksObjs])\r\n\r\n                    firestore\r\n                    .collection(\"completedTasks\")\r\n                    .where(\"date\", \"==\", selectedDate.toLocaleDateString())\r\n                    .where(\"uid\", \"==\", firebase.auth().currentUser.uid)\r\n                    .get()\r\n                    .then(d =>{\r\n                        const doc = d.docs.map(o => o.data())[0]\r\n                        if(doc)\r\n                        {\r\n                            const updatedTasks = tasksObjs.map((t, i) => {\r\n                                return {...t, isChecked: doc.tasks[i]}\r\n                            })\r\n                            setTasks(updatedTasks)                         \r\n                        }\r\n                    })\r\n\r\n                    // calculateDidTasksPercentPerMonth()\r\n                    //     .then(p => {\r\n                    //         setPercent(p)\r\n                    //     })\r\n                }\r\n                else{\r\n                    props.history.push(\"/user/addtasks\")\r\n                }\r\n            })\r\n    }, [selectedDate])\r\n\r\n\r\n    // useEffect(() =>{\r\n    //     firestore\r\n    //     .collection(\"tasks\")\r\n    //     .where(\"uid\", \"==\", firebase.auth().currentUser.uid)\r\n    //     .get()\r\n    //     .then(d =>{\r\n    //         const doc = d.docs.map(o => o.data())[0]\r\n    //         if(doc)\r\n    //         {\r\n    //             const tasksObjs = prepareTasks(doc)\r\n    //             setTasks([...tasksObjs])\r\n\r\n    //             firestore\r\n    //             .collection(\"completedTasks\")\r\n    //             .where(\"date\", \"==\", selectedDate.toLocaleDateString())\r\n    //             .where(\"uid\", \"==\", firebase.auth().currentUser.uid)\r\n    //             .get()\r\n    //             .then(d =>{\r\n    //                 const doc = d.docs.map(o => o.data())[0]\r\n    //                 if(doc)\r\n    //                 {\r\n    //                     const updatedTasks = tasksObjs.map((t, i) => {\r\n    //                         return {...t, isChecked: doc.tasks[i]}\r\n    //                     })\r\n    //                     setTasks(updatedTasks)\r\n    //                 }\r\n    //             })\r\n    //         }\r\n    //     })\r\n    // },[selectedDate])\r\n\r\n    const prepareTasks = (doc, d) =>{\r\n        const tasksObjs = doc.tasks.map(name =>{\r\n            return {name, \r\n                isChecked: false, \r\n                disabled: new Date().toLocaleDateString() == selectedDate.toLocaleDateString() ? false: true\r\n            }\r\n        })\r\n        return tasksObjs\r\n    }\r\n\r\n    const handleCalendarDateChange = (date) =>{\r\n        setSelectedDate(date)\r\n        // calculateDidTasksPercentPerMonth()\r\n        //     .then(p => {\r\n        //         setPercent(p)\r\n        //     })\r\n    }\r\n\r\n    // obliczanie task per day do progress bar\r\n    const calculateDidTasksPercent = () =>{\r\n        let numOfDidTasks = 0\r\n        tasks.forEach(t => {\r\n            if(t.isChecked)\r\n                numOfDidTasks++ \r\n            })\r\n        return Math.round((numOfDidTasks/tasks.length) * 100)\r\n    }\r\n\r\n    // const calculateDidTasksPercentPerMonth = () =>{\r\n        // // podział daty\r\n    //     const month = selectedDate.toLocaleDateString().split(\".\")[1]\r\n    //     const year = selectedDate.toLocaleDateString().split(\".\")[2]\r\n\r\n    //     return new Promise((resolve, reject) =>{\r\n    //         firestore\r\n    //         .collection(\"completedTasks\")\r\n    //         .where(\"uid\", \"==\", firebase.auth().currentUser.uid)\r\n    //         .get()\r\n    //         .then(d =>{\r\n    //             const docs = d.docs.map(o => o.data()).filter(doc =>{\r\n    //                 const m = doc.date.split(\".\")[1]\r\n    //                 const y = doc.date.split(\".\")[2]\r\n    //                 return m == month && y == year\r\n    //             })\r\n\r\n    //             let percent = 0\r\n    //             if(docs.length>0)\r\n    //             {\r\n    //                 const numOfTasks = getDaysInMonth(month, year) * docs[0].tasks.length\r\n\r\n    //                 let numOfCompleted = 0\r\n    //                 docs.forEach(doc =>{\r\n    //                     doc.tasks.forEach(t => {\r\n    //                         if(t) numOfCompleted++\r\n    //                     })\r\n    //                 })\r\n    \r\n    //                 percent = (numOfCompleted / numOfTasks) * 100\r\n    //                 resolve(percent)\r\n    //             }\r\n    //         })\r\n    //     })\r\n    // }\r\n        // // przeliczenie ilości dni w danym miesiącu\r\n    // const getDaysInMonth = (month, year) =>{\r\n    //     return new Date(year, month, 0).getDate()\r\n    // }\r\n   \r\n    return (\r\n        <>\r\n        <div className=\"tasks__container\">\r\n            <div className=\"tasks__progress-container\">\r\n                <DailyProgressBar \r\n                    trailStrokeColor=\"#9877e8\"\r\n                    strokeColor=\"#ff8084\"\r\n                    className=\"progress-bar\"\r\n                    percentage={calculateDidTasksPercent()} \r\n                />\r\n                <TasksList\r\n                    tasks={tasks}\r\n                    listType=\"showTasks\"\r\n                    handleCheckboxChangeTask={handleCheckboxChangeTask}\r\n                />\r\n            </div>\r\n            <div className=\"tasks__cal-container\">\r\n                <Calendar\r\n                    defaultActiveStartDate={new Date()}\r\n                    maxDate={new Date()}\r\n                    onChange={handleCalendarDateChange}\r\n                    value={selectedDate}\r\n                />\r\n                <Quote url={url} />\r\n            </div>\r\n            </div>\r\n        </>\r\n    )\r\n}    \r\n\r\nexport default UserTasksPage;","C:\\Users\\Zuza\\Desktop\\KURS CODERSLAB\\projekt\\kindapp\\src\\components\\Navbar\\index.js",[],"C:\\Users\\Zuza\\Desktop\\KURS CODERSLAB\\projekt\\kindapp\\src\\pages\\UserAddTasksPage\\index.js",["124","125"],"C:\\Users\\Zuza\\Desktop\\KURS CODERSLAB\\projekt\\kindapp\\src\\components\\TasksList\\index.js",["126","127"],"C:\\Users\\Zuza\\Desktop\\KURS CODERSLAB\\projekt\\kindapp\\src\\components\\TasksListItem\\index.js",[],["128","129"],"C:\\Users\\Zuza\\Desktop\\KURS CODERSLAB\\projekt\\kindapp\\src\\components\\routes\\TasksListItemBtnDelete\\index.js",[],"C:\\Users\\Zuza\\Desktop\\KURS CODERSLAB\\projekt\\kindapp\\src\\components\\Alert\\index.js",[],"C:\\Users\\Zuza\\Desktop\\KURS CODERSLAB\\projekt\\kindapp\\src\\components\\routes\\TasksListItemCheckbox\\index.js",[],"C:\\Users\\Zuza\\Desktop\\KURS CODERSLAB\\projekt\\kindapp\\src\\pages\\UserTasksPage\\Quote.js",["130"],"import react from 'react'\r\n\r\nconst Quote = ({url}) => {\r\n    return ( \r\n        <div>\r\n            <p style={{\r\n                margin: 10, \r\n                fontStyle: 'italic',\r\n                padding: 20\r\n                }}>\r\n                    \"{url}\"\r\n            </p>\r\n        </div>  \r\n     );\r\n}\r\n \r\nexport default Quote;\r\n",{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":2,"column":8,"nodeType":"137","messageId":"138","endLine":2,"endColumn":16},{"ruleId":"135","severity":1,"message":"139","line":3,"column":34,"nodeType":"137","messageId":"138","endLine":3,"endColumn":39},{"ruleId":"135","severity":1,"message":"140","line":3,"column":49,"nodeType":"137","messageId":"138","endLine":3,"endColumn":53},{"ruleId":"141","severity":1,"message":"142","line":35,"column":8,"nodeType":"143","endLine":35,"endColumn":10,"suggestions":"144"},{"ruleId":"145","severity":1,"message":"146","line":25,"column":21,"nodeType":"147","messageId":"148","endLine":25,"endColumn":23},{"ruleId":"145","severity":1,"message":"146","line":72,"column":31,"nodeType":"147","messageId":"148","endLine":72,"endColumn":33},{"ruleId":"145","severity":1,"message":"146","line":59,"column":27,"nodeType":"147","messageId":"148","endLine":59,"endColumn":29},{"ruleId":"131","replacedBy":"149"},{"ruleId":"133","replacedBy":"150"},{"ruleId":"131","replacedBy":"151"},{"ruleId":"133","replacedBy":"152"},{"ruleId":"131","replacedBy":"153"},{"ruleId":"133","replacedBy":"154"},{"ruleId":"131","replacedBy":"155"},{"ruleId":"133","replacedBy":"156"},{"ruleId":"131","replacedBy":"157"},{"ruleId":"133","replacedBy":"158"},{"ruleId":"131","replacedBy":"159"},{"ruleId":"133","replacedBy":"160"},{"ruleId":"141","severity":1,"message":"161","line":75,"column":8,"nodeType":"143","endLine":75,"endColumn":10,"suggestions":"162"},{"ruleId":"141","severity":1,"message":"163","line":116,"column":8,"nodeType":"143","endLine":116,"endColumn":22,"suggestions":"164"},{"ruleId":"145","severity":1,"message":"165","line":154,"column":59,"nodeType":"147","messageId":"148","endLine":154,"endColumn":61},{"ruleId":"141","severity":1,"message":"166","line":22,"column":7,"nodeType":"143","endLine":22,"endColumn":9,"suggestions":"167"},{"ruleId":"145","severity":1,"message":"146","line":79,"column":23,"nodeType":"147","messageId":"148","endLine":79,"endColumn":25},{"ruleId":"135","severity":1,"message":"168","line":1,"column":16,"nodeType":"137","messageId":"138","endLine":1,"endColumn":24},{"ruleId":"135","severity":1,"message":"169","line":4,"column":8,"nodeType":"137","messageId":"138","endLine":4,"endColumn":21},{"ruleId":"131","replacedBy":"170"},{"ruleId":"133","replacedBy":"171"},{"ruleId":"135","severity":1,"message":"172","line":1,"column":8,"nodeType":"137","messageId":"138","endLine":1,"endColumn":13},"no-native-reassign",["173"],"no-negated-in-lhs",["174"],"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'auth', 'contextState', and 'setContextState'. Either include them or remove the dependency array.","ArrayExpression",["175"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["173"],["174"],["173"],["174"],["173"],["174"],["173"],["174"],["173"],["174"],["173"],["174"],"React Hook useEffect has a missing dependency: 'randomQuote'. Either include it or remove the dependency array.",["176"],"React Hook useEffect has missing dependencies: 'firestore', 'prepareTasks', and 'props.history'. Either include them or remove the dependency array.",["177"],"Expected '===' and instead saw '=='.","React Hook useEffect has missing dependencies: 'firestore' and 'props.history'. Either include them or remove the dependency array.",["178"],"'useState' is defined but never used.","'TasksListItem' is defined but never used.",["173"],["174"],"'react' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},"Update the dependencies array to be: [auth, contextState, setContextState]",{"range":"187","text":"188"},"Update the dependencies array to be: [randomQuote]",{"range":"189","text":"190"},"Update the dependencies array to be: [firestore, prepareTasks, props.history, selectedDate]",{"range":"191","text":"192"},"Update the dependencies array to be: [firestore, props.history]",{"range":"193","text":"194"},[1306,1308],"[auth, contextState, setContextState]",[2904,2906],"[randomQuote]",[4394,4408],"[firestore, prepareTasks, props.history, selectedDate]",[704,706],"[firestore, props.history]"]